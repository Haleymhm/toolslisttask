	Para activar la clase "active" de un enlace
<li class="{{ Request::is('notes') ? 'active':''}}"><a href="/notes">Notas</a>


#Cosas que debe llevar el archivo Model
protected $table="Nombre_Tabla";
protected $fillable = ['campo1', '...','campoN'];



## Metodo Salvar con asignacion de valores al campo
$note = new Note;  //Note es el modelo
   $note->title  =  request()->title;
/*modelo->campo = txtFormulario;*/
$note->body  =  request()->body;
$note->important  =  is_null(request()->important? 0 : 1);
$note->save;


<!-- <script scr="{{ asset('/js/appselect.js') }}"></script>-->
<script>
    $(function () {
      $('#list-uniop').on('change',onNewUnidadSelected);

    });

    function onNewUnidadSelected() {
      var uniope_id = $(this).val();
      location.href='/actividad/selectunidad/'+uniope_id;
    };
</script>





$('.button-checkbox').each(function () {

        // Settings
        var $widget = $(this),
            $button = $widget.find('button'),
            $checkbox = $widget.find('input:checkbox'),
            color = $button.data('color'),
            settings = {
                on: {
                    icon: 'glyphicon glyphicon-check'
                },
                off: {
                    icon: 'fa fa-square-o'
                }
            };

        // Event Handlers
        $button.on('click', function () {
            $checkbox.prop('checked', !$checkbox.is(':checked'));
            $checkbox.triggerHandler('change');
            updateDisplay();
        });
        $checkbox.on('change', function () {
            updateDisplay();
        });

        // Actions
        function updateDisplay() {
            var isChecked = $checkbox.is(':checked');

            // Set the button's state
            $button.data('state', (isChecked) ? "on" : "off");

            // Set the button's icon
            $button.find('.state-icon')
                .removeClass()
                .addClass('state-icon ' + settings[$button.data('state')].icon);

            // Update the button's color
            if (isChecked) {
                $button
                    .removeClass('btn-default')
                    .addClass('btn-' + color + ' active');
            }
            else {
                $button
                    .removeClass('btn-' + color + ' active')
                    .addClass('btn-default');
            }
        }

        // Initialization
        function init() {

            updateDisplay();

            // Inject the icon if applicable
            if ($button.find('.state-icon').length == 0) {
                $button.prepend('<i class="state-icon ' + settings[$button.data('state')].icon + '"></i> ');
            }
        }
        init();
    });/*********/
